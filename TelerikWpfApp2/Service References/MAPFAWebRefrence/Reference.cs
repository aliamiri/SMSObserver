//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelerikWpfApp2.MAPFAWebRefrence {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://pardiskish", ConfigurationName="MAPFAWebRefrence.HelloWorld")]
    public interface HelloWorld {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="queryReturn")]
        int[] query(string username, string password, string domain, long[] messageIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="queryReturn")]
        System.Threading.Tasks.Task<int[]> queryAsync(string username, string password, string domain, long[] messageIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ServiceSendReturn")]
        long[] ServiceSend(string username, string password, string domain, int msgType, string[] messages, string[] destinations, string[] originators, string[] udhs, string[] mClass, string[] ServiceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="ServiceSendReturn")]
        System.Threading.Tasks.Task<long[]> ServiceSendAsync(string username, string password, string domain, int msgType, string[] messages, string[] destinations, string[] originators, string[] udhs, string[] mClass, string[] ServiceIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void loadImpnums(object con);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task loadImpnumsAsync(object con);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getClearNumberReturn")]
        string getClearNumber(string number, bool appendZiro);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getClearNumberReturn")]
        System.Threading.Tasks.Task<string> getClearNumberAsync(string number, bool appendZiro);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HelloWorldChannel : TelerikWpfApp2.MAPFAWebRefrence.HelloWorld, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldClient : System.ServiceModel.ClientBase<TelerikWpfApp2.MAPFAWebRefrence.HelloWorld>, TelerikWpfApp2.MAPFAWebRefrence.HelloWorld {
        
        public HelloWorldClient() {
        }
        
        public HelloWorldClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HelloWorldClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloWorldClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HelloWorldClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int[] query(string username, string password, string domain, long[] messageIds) {
            return base.Channel.query(username, password, domain, messageIds);
        }
        
        public System.Threading.Tasks.Task<int[]> queryAsync(string username, string password, string domain, long[] messageIds) {
            return base.Channel.queryAsync(username, password, domain, messageIds);
        }
        
        public long[] ServiceSend(string username, string password, string domain, int msgType, string[] messages, string[] destinations, string[] originators, string[] udhs, string[] mClass, string[] ServiceIds) {
            return base.Channel.ServiceSend(username, password, domain, msgType, messages, destinations, originators, udhs, mClass, ServiceIds);
        }
        
        public System.Threading.Tasks.Task<long[]> ServiceSendAsync(string username, string password, string domain, int msgType, string[] messages, string[] destinations, string[] originators, string[] udhs, string[] mClass, string[] ServiceIds) {
            return base.Channel.ServiceSendAsync(username, password, domain, msgType, messages, destinations, originators, udhs, mClass, ServiceIds);
        }
        
        public void loadImpnums(object con) {
            base.Channel.loadImpnums(con);
        }
        
        public System.Threading.Tasks.Task loadImpnumsAsync(object con) {
            return base.Channel.loadImpnumsAsync(con);
        }
        
        public string getClearNumber(string number, bool appendZiro) {
            return base.Channel.getClearNumber(number, appendZiro);
        }
        
        public System.Threading.Tasks.Task<string> getClearNumberAsync(string number, bool appendZiro) {
            return base.Channel.getClearNumberAsync(number, appendZiro);
        }
    }
}
